# Example OpenAPI spec using YAML
# Be aware that YAML has indentation based scoping.
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
# Generate client & server code stubs using http://editor.swagger.io/#/
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.1"
  title: Business Process API

# Describe your paths here
paths:
  # This is the version path endpoint.
  /version:
    # This is a HTTP operation (GET)
    get:
      # Describe this verb here. Note: you can use markdown
      summary: get the name and version string
      produces:
      - application/json
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Version'
  /content:
    get:
      summary: Get the business process definitions
      operationId: getProcessDefinitions
      produces:
      - application/json
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Process'
    post:
      summary: Add a new business process
      operationId: addProcessDefinition
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Process'
      responses:
        # Response code
        200:
          description: BP added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      description: Update a business process
      operationId: updateProcessDefinition
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Process'
      responses:
        # Response code
        200:
          description: BP updated
          schema:
            $ref: '#/definitions/ApiResponse'
  /content/{processID}:
    get:
      summary: Get the business process definitions
      operationId: getProcessDefinition
      produces:
      - application/json
      parameters:
      - in: path
        name: processID
        type: string
        description: The id of the business process.
        required: true
      responses:
        # Response code
        200:
          description: BP obtained
          schema:
            $ref: '#/definitions/Process'
    delete:
      description: Deletes a business process definition
      operationId: deleteProcessDefinition
      produces:
      - application/json
      parameters:
      - in: path
        name: processID
        type: string
        required: true
      responses:
        # Response code
        200:
          description: BP deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /preference:
    post:
      summary: Add a new partner business process sequence preference
      operationId: addProcessPartnerPreference
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessPreferences'
      responses:
        # Response code
        200:
          description: Partner Preference added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      description: Update the business process preference of a partner
      operationId: updateProcessPartnerPreference
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ProcessPreferences'
      responses:
        # Response code
        200:
          description: Partner Preference updated
          schema:
            $ref: '#/definitions/ApiResponse'
  /preference/{partnerID}:
    get:
      summary: Get the business process preference of a partner
      operationId: getProcessPartnerPreference
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference obtained
          schema:
            $ref: '#/definitions/ProcessPreferences'
    delete:
      description: Deletes the business process preference of a partner
      operationId: deleteProcessPartnerPreference
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /application:
    post:
      summary: Add a new partner business process application preference
      operationId: addProcessConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessConfiguration'
      responses:
        # Response code
        200:
          description: Partner Preference added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      description: Update the business process application preference of a partner
      operationId: updateProcessConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ProcessConfiguration'
      responses:
        # Response code
        200:
          description: Partner Preference updated
          schema:
            $ref: '#/definitions/ApiResponse'

  /application/{partnerID}:
    get:
      summary: Get the business process application preferences of a partner for all processes
      operationId: getProcessConfiguration
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference obtained
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessConfiguration'
  /application/{partnerID}/{processID}/{roleType}:
    get:
      summary: Get the business process application preferences of a partner for a specific process
      operationId: getProcessConfigurationByProcessID
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      - in: path
        name: processID
        type: string
        required: true
      - in: path
        name: roleType
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference obtained
          schema:
            $ref: '#/definitions/ProcessConfiguration'
    delete:
      description: Deletes the business process application preference of a partner for a process
      operationId: deleteProcessConfiguration
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        required: true
      - in: path
        name: processID
        type: string
        required: true
      - in: path
        name: roleType
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /start:
    post:
      summary: Start an instance of a business process
      operationId: startProcessInstance
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessInstanceInputMessage'
      responses:
        # Response code
        200:
          description: Business Process Instance Started
          schema:
            $ref: '#/definitions/ProcessInstance'

  /continue:
    post:
      summary: Send input to a waiting process instance (because of a human task)
      operationId: continueProcessInstance
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessInstanceInputMessage'
      responses:
        # Response code
        200:
          description: Business Process Instance Message sent successfully
          schema:
            $ref: '#/definitions/ProcessInstance'

  /document:
    post:
      summary: Add a business process document metadata
      operationId: addDocumentMetadata
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessDocumentMetadata'
      responses:
        # Response code
        200:
          description: Document added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      description: Update a business process document metadata
      operationId: updateDocumentMetadata
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ProcessDocumentMetadata'
      responses:
        # Response code
        200:
          description: Document updated
          schema:
            $ref: '#/definitions/ApiResponse'

  /document/{documentID}:
    delete:
      description: Deletes the business process document metadata together with content by id
      operationId: deleteDocument
      produces:
      - application/json
      parameters:
      - in: path
        name: documentID
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Document deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /document/{partnerID}/{type}/{source}/{status}:
    get:
      summary: Get the business process document metadata
      operationId: getDocuments
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      - in: path
        name: type
        type: string
        description: The type of the document
        required: true
      - in: path
        name: status
        type: string
        description: The status of the document. (APPROVED, WAITINGRESPONSE, DENIED or PASTDUE)
        required: true
      - in: path
        name: source
        type: string
        description: The source of the document (whether it is sent or received by the partner - SENT, RECEIVED).
        required: true
      responses:
        # Response code
        200:
          description: Document obtained
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessDocumentMetadata'

  /document/{partnerID}/{type}/{source}:
    get:
      summary: Get the business process document metadata
      operationId: getDocuments
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      - in: path
        name: type
        type: string
        description: The type of the document
        required: true
      - in: path
        name: source
        type: string
        description: The source of the document (whether it is sent or received by the partner - SENT, RECEIVED).
        required: true
      responses:
        # Response code
        200:
          description: Document obtained
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessDocumentMetadata'

  /document/{partnerID}/{type}:
    get:
      summary: Get the business process document metadata
      operationId: getDocuments
      produces:
      - application/json
      parameters:
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      - in: path
        name: type
        type: string
        description: The type of the document
        required: true
      responses:
        # Response code
        200:
          description: Document obtained
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessDocumentMetadata'

  /group:
    get:
      summary: Retrieves process instance groups for the specified party. If no partyID is specified, then all groups are returned
      operationId: getProcessInstanceGroups
      parameters:
      - in: query
        name: partyID
        type: string
        description: Identifier of the party
      - in: query
        name: relatedProducts
        type: array
        description: Related products
      - in: query
        name: tradingPartnerIDs
        type: array
        description: Identifier of the corresponsing trading partner ID
      - in: query
        name: initiationDateRange
        type: string
        description: Initiation date range for the first process instance in the group
      - in: query
        name: lastActivityDateRange
        type: string
        description: Last activity date range. It is the creation date of last process instance in the group
      - in: query
        name: offset
        type: integer
        description: Offset of the first result among the complete result set satisfying the given criteria
        default: 0
      - in: query
        name: limit
        type: integer
        description: Number of results to be included in the result set
        default: 10
      - in: query
        name: archived
        type: boolean
        default: false
      produces:
      - application/json
      responses:
        200:
          description: Retrieved the groups successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessInstanceGroup'
    post:
      summary: Saves a process group along with the initial process instance
      operationId: saveProcessInstanceGroup
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: processInstanceGroup
        description: The content of the process instance group to be saved
        required: true
        schema:
          $ref: '#/definitions/ProcessInstanceGroup'
      responses:
        # Response code
        201:
          description: Saved the group successfully

  /group/{ID}:
    get:
      summary: Retrieves the process instance group specified with the ID
      operationId: getProcessInstanceGroup
      parameters:
      - in: path
        name: ID
        type: string
        required: true
      responses:
        200:
          description: Retrieved the groups successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroup'
    delete:
      summary: Deletes the process instance group along with the included process instances
      operationId: deleteProcessInstanceGroup
      parameters:
      - in: path
        name: ID
        type: string
        required: true
      responses:
        200:
          description: Deleted the groups successfully

  /group/{ID}/archive:
    post:
      summary: Archives the process instance group specified with ID
      operationId: archiveGroup
      parameters:
      - in: path
        name: ID
        type: string
        description: Identifier of the process instance group to be archived
        required: true
      responses:
        200:
          description: Archived the group successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroup'
  /group/{ID}/restore:
    post:
      summary: Restores the archived process instance group specified with ID
      operationId: restoreGroup
      parameters:
      - in: path
        name: ID
        type: string
        description: Identifier of the process instance group to be restored
        required: true
      responses:
        200:
          description: Restored the group successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroup'

  /group/archive-all:
    post:
      summary: Archives all the groups of the given party
      operationId: archiveAllGroups
      parameters:
      - in: query
        name: partyID
        type: string
        description: Identifier of the party of which groups will be archived
        required: true
      responses:
        200:
          description: Archived the groups successfully
  /group/delete-all:
    post:
      summary: Deletes all the archived groups of the given party
      operationId: deleteAllArchivedGroups
      parameters:
      - in: query
        name: partyID
        type: string
        description: Identifier of the party of which groups will be deleted
        required: true
      responses:
        200:
          description: Deleted the groups successfully

  /group/{ID}/process-instance:
    post:
      summary: Adds a new process instance to the specified
      operationId: addProcessInstanceToGroup
      parameters:
      - in: path
        name: ID
        type: string
        description: Identifier of the process instance group to which a new process instance id is added
        required: true
      - in: query
        name: processInstanceID
        type: string
        description: Identifier of the process instance to be added
        required: true
      responses:
        200:
          description: Added the process instance to the group successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroup'
    delete:
      summary: Deletes a new process instance to the specified
      operationId: deleteProcessInstanceFromGroup
      parameters:
      - in: path
        name: ID
        type: string
        description: Identifier of the process instance group from which the process instance id is deleted
        required: true
      - in: query
        name: processInstanceID
        type: string
        description: Identifier of the process instance to be deleted
        required: true
      responses:
        200:
          description: Deleted the process instance from the group successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroup'

definitions:

  Version:
    title: Version Object
    type: object
    properties:
      serviceId:
        type: string
      version:
        type: string

  ProcessPreferences:
    title: Business Process Preferences Object of a partner for all other partners
    type: object
    properties:
      partnerID:
        type: string
      preferences:
        type: array
        items:
          $ref: '#/definitions/ProcessPreference'

  ProcessPreference:
    title: Business Process Preference Object for a specific case (e.g. default or for a partner)
    type: object
    properties:
      targetPartnerID:
        type: string
        description: The value is DEFAULT or the partner ID for whom this preference is specified
      processOrder:
        type: array
        items:
          type: string
          enum:
          - CATALOGUE
          - NEGOTIATION
          - ORDER
          - REMITTANCEADVICE
          - INVOICE
          - TRACKING
          - FULFILMENT
          - TRANSPORT_EXECUTION_PLAN
          - ITEM_INFORMATION_REQUEST
          - PRODUCTCONFIGURATION
          - PPAP
          - OTHER


  Transaction:
    title: The transaction in a business process
    type: object
    properties:
      transactionID:
        type: string
      initiatorRole:
        type: string
        enum:
        - BUYER
        - SELLER
        - LOGISTICSPROVIDER
      responderRole:
        type: string
        enum:
        - BUYER
        - SELLER
        - LOGISTICSPROVIDER
      documentType:
        type: string
        enum:
        - CATALOGUE
        - REQUESTFORQUOTATION
        - QUOTATION
        - ORDER
        - ORDERRESPONSESIMPLE
        - REMITTANCEADVICE
        - INVOICE
        - APPLICATIONRESPONSE
        - TRANSPORTATIONSTATUS
        - DESPATCHADVICE
        - RECEIPTADVICE
        - PPAPREQUEST
        - PPAPRESPONSE
        - TRANSPORTEXECUTIONPLANREQUEST
        - TRANSPORTEXECUTIONPLAN
        - ITEMINFORMATIONREQUEST
        - ITEMINFORMATIONRESPONSE
        - OTHER

  Process:
    title: Business Process Object
    type: object
    properties:
      processID:
        type: string
      processName:
        type: string
      processType:
        type: string
        enum:
        - CATALOGUE
        - NEGOTIATION
        - ORDER
        - REMITTANCEADVICE
        - INVOICE
        - TRACKING
        - FULFILMENT
        - PRODUCTCONFIGURATION
        - PPAP
        - TRANSPORT_EXECUTION_PLAN
        - ITEM_INFORMATION_REQUEST
        - OTHER
      textContent:
        type: string
      bpmnContent:
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  ExecutionConfiguration:
    title: Execution Configuration Object
    type: object
    properties:
      applicationType:
        type: string
        enum:
        - DATAADAPTER
        - DATACHANNEL
        - DATAPROCESSOR
      executionType:
        type: string
        enum:
        - JAVA
        - MICROSERVICE
        - OTHER
      executionUri:
        type: string

  TransactionConfiguration:
    title: Application Configuration Object for each activity in a business process
    type: object
    properties:
      transactionID:
        type: string
        description: The transaction where the activity exist
      executionConfigurations:
        type: array
        items:
          $ref: '#/definitions/ExecutionConfiguration'

  ProcessConfiguration:
    title: Applications in Business Process Configuration Object
    type: object
    properties:
      partnerID:
        type: string
      roleType:
        type: string
        enum:
        - BUYER
        - SELLER
        - LOGISTICSPROVIDER        
      processID:
        type: string
      transactionConfigurations:
        type: array
        items:
          $ref: '#/definitions/TransactionConfiguration'

  ProcessVariables:
    title: Business Process Variables Object
    type: object
    properties:
      processID:
        type: string
      initiatorID:
        type: string
      responderID:
        type: string
      contentUUID:
        type: string
        description: The UUID of the document in the content variable
      relatedProducts:
        type: array
        items:
          type: string
      content:
        type: string

  ProcessInstanceInputMessage:
    title: Business Process Input Message Object
    type: object
    properties:
      variables:
        $ref: '#/definitions/ProcessVariables'
      processInstanceID:
        type: string

  ProcessInstance:
    title: Business Process Instance
    type: object
    properties:
      processInstanceID:
        type: string
      creationDate:
        type: string
      processID:
        type: string
      status:
        type: string
        enum:
        - STARTED
        - WAITING
        - ABORTED
        - COMPLETED

  ProcessInstanceGroup:
    title: Process Instance Group
    type: object
    properties:
      ID:
        type: string
      partyID:
        type: string
      processInstanceIDs:
        type: array
        items:
          type: string
      archived:
        type: boolean

  ProcessDocumentMetadata:
    title: Business Process Document Metadata Object
    type: object
    properties:
      documentID:
        type: string
      submissionDate:
        type: string
      type:
        type: string
        enum:
        - CATALOGUE
        - REQUESTFORQUOTATION
        - QUOTATION
        - ORDER
        - ORDERRESPONSESIMPLE
        - REMITTANCEADVICE
        - INVOICE
        - APPLICATIONRESPONSE
        - TRANSPORTATIONSTATUS
        - DESPATCHADVICE
        - RECEIPTADVICE
        - PPAPREQUEST
        - PPAPRESPONSE
        - TRANSPORTEXECUTIONPLANREQUEST
        - TRANSPORTEXECUTIONPLAN
        - ITEMINFORMATIONREQUEST
        - ITEMINFORMATIONRESPONSE
        - OTHER
      relatedProducts:
        type: array
        items:
          type: string
      status:
        type: string
        enum:
        - APPROVED
        - WAITINGRESPONSE
        - DENIED
        - PASTDUE
      processInstanceID:
        type: string
      initiatorID:
        type: string
      responderID:
        type: string

  ApiResponse:
    type: object
    properties:
      code:
        type: integer
      type:
        type: string
      message:
        type: string
