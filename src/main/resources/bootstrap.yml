server:
  port: ${PORT:8081}
spring:
  application:
    # the name of the application represents the global identifier of this microservice.
    name: business-process-service
  cloud:
    config:
      uri: ${vcap.services.config-service.credentials.url:${CONFIG_SERVER_URI:http://localhost:8888}}
      # failFast is disabled per default, so that the service can start standalone without config server.
      # failFast should be enabled in production environments.
      # it can be set via an environment variable or the config server
      failFast: ${vcap.services.config-service.failFast:${CONFIG_SERVER_FAILFAST:false}}
    discovery:
      # by disabling the service discovery the application/service can be started in "standalone mode".
      # service discovery is disabled by default and should be enabled (set to true) for the "cloud mode".
      # it can be set via an environment variable or the config server
      enabled: ${discovery.enabled:${DISCOVERY_ENABLED:false}}
  datasource:
    url: jdbc:postgresql://${BUSINESS_PROCESS_DB_URI:localhost:5432}/businessprocessengine?user=root&password=postgres
    driverClassName: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        connection:
#          url: jdbc:postgresql://${BUSINESS_PROCESS_DB_URI:localhost:5432}/businessprocessengine
#          username: postgres
#          password: postgres
#          driver_class: org.postgresql.Driver
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#
#        show_sql: true
#        hbm2ddl:
#          auto: update
#        cache:
#          provider_class: org.hibernate.cache.HashtableCacheProvider
#        jdbc:
#          batch_size: 0
#
#        # OPEN THE FOLLOWING PROPERTIES IN THE PRODUCTION ENVIRONMENT
#        c3p0:
#          acquire_increment: 2
#          idle_test_period: 60
#          min_size: 10
#          max_size: 100
#          maxStatements: 0
#          maxStatementsPerConnection: 100
#          timeout: 300
#          acquireRetryAttempts: 1
#          acquireRetryDelay: 250
#          numHelperThreads: 10
#        use_sql_comments: true
#        transaction:
#          factory_class: org.hibernate.transaction.JDBCTransactionFactory
#        current_session_context_class: thread


logstash:
  uri: ${vcap.services.logstash-service.credentials.url:${LOGSTASH_URI:localhost:5000}}

camunda:
  bpm:
    webapp:
      index-redirect-enabled: false
    admin-user:
      id: kermit
      password: superSecret

nimble:
  cors_enabled: false

---

spring:
  profiles: local_dev
  # Local h2 database
  datasource:
    url: jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password:
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true

nimble:
  cors_enabled: true